version: '3.8'

# === Omniy Development Environment ===
# 1人運営向け効率的なDocker環境

services:
  # Frontend Development Server
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: frontend-dev
    container_name: omniy-frontend-dev
    ports:
      - "5173:5173"    # Vite Dev Server
    volumes:
      - ./frontend:/app/frontend:delegated
      - /app/frontend/node_modules
      - frontend_cache:/app/frontend/.vite
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:5001
      - VITE_USE_FIREBASE_EMULATOR=true
      - VITE_FIREBASE_EMULATOR_HOST=backend
      - VITE_FIREBASE_AUTH_EMULATOR_PORT=9099
      - VITE_FIREBASE_FIRESTORE_EMULATOR_PORT=8080
      - VITE_FIREBASE_FUNCTIONS_EMULATOR_PORT=5001
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - omniy-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend Development Server (Firebase Functions + Emulators)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: backend-dev
    container_name: omniy-backend-dev
    ports:
      - "5001:5001"  # Functions
      - "4000:4000"  # Firebase UI
      - "9099:9099"  # Auth Emulator
      - "8080:8080"  # Firestore Emulator
      - "9199:9199"  # Storage Emulator
    volumes:
      - ./functions:/app/functions:delegated
      - /app/functions/node_modules
      - ./firebase.json:/app/firebase.json:ro
      - ./firestore.rules:/app/firestore.rules:ro
      - ./firestore.indexes.json:/app/firestore.indexes.json:ro
      - firebase_data:/app/firebase-data
      - backend_cache:/app/functions/.cache
    environment:
      - NODE_ENV=development
      - FUNCTIONS_EMULATOR=true
      - GCLOUD_PROJECT=demo-omniy-dev
      - FIREBASE_AUTH_EMULATOR_HOST=0.0.0.0:9099
      - FIRESTORE_EMULATOR_HOST=0.0.0.0:8080
      - FIREBASE_STORAGE_EMULATOR_HOST=0.0.0.0:9199
    networks:
      - omniy-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: omniy-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - omniy-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database GUI (Optional - for Firestore data viewing)
  firestore-gui:
    image: node:18-alpine
    container_name: omniy-firestore-gui
    ports:
      - "3000:3000"
    volumes:
      - ./tools/firestore-gui:/app
    working_dir: /app
    command: sh -c "npm install -g @firebase/firestore-gui && firestore-gui --host 0.0.0.0 --port 3000 --emulator backend:8080"
    depends_on:
      - backend
    networks:
      - omniy-dev
    restart: unless-stopped
    profiles:
      - tools

  # Testing Environment
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: test
    container_name: omniy-test-runner
    volumes:
      - .:/app:delegated
      - /app/frontend/node_modules
      - /app/functions/node_modules
      - test_reports:/app/test-reports
    environment:
      - NODE_ENV=test
      - CI=true
    depends_on:
      - backend
    networks:
      - omniy-dev
    profiles:
      - test

  # Production-like Environment for Testing
  prod-preview:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: prod-dev
    container_name: omniy-prod-preview
    ports:
      - "8080:80"
      - "8081:5001"
    environment:
      - NODE_ENV=production
    networks:
      - omniy-dev
    restart: unless-stopped
    profiles:
      - preview

  # Development Tools Container
  dev-tools:
    image: node:18-alpine
    container_name: omniy-dev-tools
    volumes:
      - .:/app:delegated
      - dev_tools_cache:/root/.npm
    working_dir: /app
    command: tail -f /dev/null  # Keep container running
    environment:
      - NODE_ENV=development
    networks:
      - omniy-dev
    profiles:
      - tools

networks:
  omniy-dev:
    driver: bridge
    name: omniy-development

volumes:
  frontend_cache:
    name: omniy-frontend-cache
  backend_cache:
    name: omniy-backend-cache
  firebase_data:
    name: omniy-firebase-data
  redis_data:
    name: omniy-redis-data
  test_reports:
    name: omniy-test-reports
  dev_tools_cache:
    name: omniy-dev-tools-cache