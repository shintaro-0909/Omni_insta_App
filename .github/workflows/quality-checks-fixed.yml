name: Quality Checks Fixed

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Frontend Tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run TypeScript type checking
      working-directory: ./frontend
      run: npm run type-check
      
    - name: Run unit tests
      working-directory: ./frontend
      run: npm run test:unit
      
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  # Backend Tests  
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: functions/package-lock.json
        
    - name: Install backend dependencies
      working-directory: ./functions
      run: npm ci
      
    - name: Run TypeScript build
      working-directory: ./functions
      run: npm run build
      
    - name: Run backend tests
      working-directory: ./functions
      run: npm run test

  # Lint & Test
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
        
    - name: Run ESLint on frontend
      working-directory: ./frontend
      run: npm run lint
      
    - name: Install backend dependencies
      working-directory: ./functions
      run: npm ci
        
    - name: Run ESLint on backend
      working-directory: ./functions
      run: npm run lint

  # Security Check
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Frontend security audit
      working-directory: ./frontend
      run: npm audit --audit-level moderate --production
      continue-on-error: true
      
    - name: Install backend dependencies
      working-directory: ./functions
      run: npm ci
      
    - name: Backend security audit
      working-directory: ./functions
      run: npm audit --audit-level high --production
      continue-on-error: true