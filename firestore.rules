rules_version = '2';
/**
 * 1人運営向け簡潔Firestoreセキュリティルール
 * 90%のケースをカバーする実用的なセキュリティ
 */
service cloud.firestore {
  match /databases/{database}/documents {
    
    // === ヘルパー関数 (必要最小限) ===
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidEmail() {
      return isAuthenticated() && request.auth.token.email_verified == true;
    }
    
    // プラン制限チェック (シンプル版)
    function checkPlanLimits(userId) {
      let userDoc = get(/databases/$(database)/documents/users/$(userId));
      let currentUsage = userDoc.data.monthlyUsage;
      let planLimit = userDoc.data.planLimit;
      return currentUsage < planLimit;
    }

    // === ユーザーデータ (認証ユーザーのみアクセス) ===
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId) && isValidEmail();
      allow update: if isOwner(userId);
      allow delete: if false; // 削除は禁止 (データ保護)
      
      // Instagram アカウント管理
      match /igAccounts/{igAccountId} {
        allow read, write: if isOwner(userId);
      }
      
      // 予約投稿スケジュール 
      match /schedules/{scheduleId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId) && checkPlanLimits(userId);
        allow update, delete: if isOwner(userId);
      }
      
      // 投稿履歴・ログ (読み取り専用)
      match /logs/{logId} {
        allow read: if isOwner(userId);
        allow write: if false; // Cloud Functions のみ
      }
    }
    
    // === コンテンツライブラリ (所有者のみ) ===
    match /posts/{postId} {
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
    }
    
    // === 料金プラン (全認証ユーザー読み取り可能) ===
    match /plans/{planId} {
      allow read: if isAuthenticated();
      allow write: if false; // 更新は禁止 (Code で管理)
    }
    
    // === Stripe 決済ログ (システム専用) ===
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
      allow write: if false; // Cloud Functions のみ
    }
    
    // === システムログ (Cloud Functions 専用) ===
    match /systemLogs/{logId} {
      allow read, write: if false; // システム内部のみ
    }
    
    // === フィードバック (認証ユーザーのみ) ===
    match /feedback/{feedbackId} {
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.ownerUid;
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.ownerUid;
      allow update: if isAuthenticated() && 
        request.auth.uid == resource.data.ownerUid;
      allow delete: if false; // 削除は禁止 (データ保護)
    }
    
    // === デフォルト拒否 (セキュリティ確保) ===
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 